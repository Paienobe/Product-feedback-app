import Head from 'next/head'
import Image from 'next/image'
import Header from '../components/Header'
import FeedbackHeader from '../components/FeedbackHeader'
import { useGlobalContext } from '../context/GlobalContext'
import Feedback from '../components/Feedback'
import EmptyFilter from '../components/EmptyFilter'

export default function Home() {
  const { productRequests, sortBy, filterBy } = useGlobalContext()

  const sortingFunction = (itemA, itemB) => {
    if (sortBy === 'Most Upvotes') {
      if (itemA.upvotes < itemB.upvotes) {
        return 1
      } else if (itemA.upvotes === itemB.upvotes) {
        return 0
      } else return -1
    } else if (sortBy === 'Least Upvotes') {
      if (itemA.upvotes > itemB.upvotes) {
        return 1
      } else if (itemA.upvotes === itemB.upvotes) {
        return 0
      } else return -1
    } else if (sortBy === 'Most Comments') {
      if (itemA.comments?.length < itemB.comments?.length) {
        return 1
      } else if (itemA.comments?.length === itemB.comments?.length) {
        return 0
      } else return -1
    } else if (sortBy === 'Least Comments') {
      if (itemA.comments?.length > itemB.comments?.length) {
        return 1
      } else if (itemA.comments?.length === itemB.comments?.length) {
        return 0
      } else return -1
    }
  }

  const filteredRequest = productRequests.filter((request) => {
    return request.category.toLowerCase() === filterBy?.toLowerCase()
  })

  return (
    <div className='bg-indigo-100 min-h-screen overflow-x-hidden'>
      <Head>
        <title>Invoice App</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>

      <div>
        <Header />
        <div className='p-4 lg:w-4/5 lg:ml-auto relative lg:mt-8'>
          <FeedbackHeader />
          <div>
            {filterBy !== 'All' ? (
              <div className='mt-14 sm:mt-20 sm:mx-4'>
                {filteredRequest?.sort(sortingFunction)?.map((request) => {
                  return <Feedback key={request.id} {...request} />
                })}

                {filteredRequest?.sort(sortingFunction).length < 1 && (
                  <EmptyFilter />
                )}
              </div>
            ) : (
              <div className='mt-14 sm:mt-20 sm:mx-4'>
                {productRequests?.sort(sortingFunction)?.map((request) => {
                  return <Feedback key={request.id} {...request} />
                })}
              </div>
            )}
          </div>
        </div>
      </div>
    </div>
  )
}
